sub use_director_{{director.name}} {
{% for vcl_director in vcl_directors %}
{% if loop.index == 1 %}
    unset req.http.X-Accept-Proto;
    set req.http.X-Accept-Proto = "{{vcl_director.director.protocol}}";
    unset req.http.X-VaaS-Prefix;
    set req.http.X-VaaS-Prefix = "{{ vcl_director.director.route_expression }}";
    {% if vcl_director.director.router == 'req.url' %}
    set req.http.X-Forwarded-Prefix = "{{ vcl_director.director.route_expression }}";
    {% endif %}
    set req.http.X-VaaS-Director = "{{ vcl_director.dc.symbol }}/{{ vcl_director.director.name }}";
    {% if vcl_director.director.mode == 'hash' %}
    set req.backend_hint = {{ vcl_director.director.name }}_{{ vcl_director.dc.symbol }}.backend({{ vcl_director.director.hashing_policy }});
    {% else %}
    set req.backend_hint = {{ vcl_director.director.name }}_{{ vcl_director.dc.symbol }}.backend();
    {% endif %}
{% else %}
    if (!std.healthy(req.backend_hint)) {
        set req.http.X-VaaS-Director = "{{ vcl_director.dc.symbol }}/{{ vcl_director.director.name }}";
        {% if vcl_director.director.mode == 'hash' %}
        set req.backend_hint = {{ vcl_director.director.name }}_{{ vcl_director.dc.symbol }}.backend({{ vcl_director.director.hashing_policy }});
        {% else %}
        set req.backend_hint = {{ vcl_director.director.name }}_{{ vcl_director.dc.symbol }}.backend();
        {% endif %}
    }
{% endif %}
{% endfor %}
}
