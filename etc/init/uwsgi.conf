import os

def create_uwsgi_conf_file():
    file_path = "/etc/init/uwsgi.conf"
    file_contents = """description "Vaas - Varnish Configuration"
start on runlevel [2345]
stop on runlevel [06]

exec /home/vagrant/prod-env/bin/uwsgi --env DJANGO_SETTINGS_MODULE=vaas.settings --uid vagrant --master --processes 8 --die-on-term --socket /tmp/vaas.sock -H /home/vagrant/prod-env --module vaas.external.wsgi --chmod-socket=666 --logto /tmp/uwsgi.log
"""

    try:
        with open(file_path, "w") as file:
            file.write(file_contents)
    except IOError as e:
        print(f"Error creating uwsgi.conf file: {e}")

# Unit tests
def test_create_uwsgi_conf_file():
    # Mock file operations
    with mock.patch("builtins.open", mock.mock_open()) as mock_file:
        create_uwsgi_conf_file()
        mock_file.assert_called_once_with("/etc/init/uwsgi.conf", "w")
        mock_file().write.assert_called_once_with("""description "Vaas - Varnish Configuration"
start on runlevel [2345]
stop on runlevel [06]

exec /home/vagrant/prod-env/bin/uwsgi --env DJANGO_SETTINGS_MODULE=vaas.settings --uid vagrant --master --processes 8 --die-on-term --socket /tmp/vaas.sock -H /home/vagrant/prod-env --module vaas.external.wsgi --chmod-socket=666 --logto /tmp/uwsgi.log
""")

        # Test error handling
        mock_file.side_effect = IOError("File error")
        create_uwsgi_conf_file()  # Should print the error message

if __name__ == "__main__":
    create_uwsgi_conf_file()
